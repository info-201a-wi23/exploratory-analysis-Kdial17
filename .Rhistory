num_highest_state <- states %>% filter(cases == max(cases, na.rm = TRUE)) %>% pull(cases)
num_highest_state
# 2.e Which state has the highest ratio of deaths to cases (deaths/cases), as of the most recent date? Make sure to pull() this value
# HINT: You may need to create a new column in order to do this. `most_deaths`
states <- states %>% mutate(most_deaths = deaths/cases)
state_highest_ratio <- states %>% filter(most_deaths == max(most_deaths)) %>% pull(state)
state_highest_ratio
# 2.f Which state has had the fewest number of cases as of the most
# recent date? Make sure to pull() this value `state_lowest_cases`
state_lowest_cases <- states %>% filter(cases == min(cases, na.rm = TRUE)) %>% filter(date == max(date)) %>% pull(state)
state_lowest_cases
# 2.g Which county has had the highest number of cases? Make sure to pull() this number `county_highest_cases`
county_highest_cases <- counties %>% filter(cases == max(cases, na.rm = TRUE)) %>% pull(county)
county_highest_cases
# 2.h What is the highest number of cases that have happened in a single county? Make sure to pull() this number `num_highest_cases_county`
num_highest_cases_county <- counties %>% filter(cases == max(cases, na.rm = TRUE)) %>% pull(cases)
num_highest_cases_county
# 2.i Because there are multiple counties with the same name across states, it will be helpful to have a column that stores the county and state together, in this form: "COUNTY, STATE".
# Therefore, add a new column to your `counties` data frame called `location` that stores the county and state (separated by a comma and space).
counties <- counties %>% mutate(location = paste0(county, ", ", state))
counties
# 2.j What is the name of the location (county, state) with the highest number of deaths? Make sure to pull() this value `location_most_deaths`
location_most_deaths <- counties %>% filter(cases == max(cases, na.rm = TRUE)) %>% pull(location)
location_most_deaths
# 2.k Add a new column to your `national` data frame called `new_cases` — that is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- national %>% mutate(new_cases = lag(national$cases))
national
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- national %>% mutate(new_deaths = lag(national$deaths))
national
# 2.m What was the date when the most new cases in the U.S. occurred? Make sure to pull() this value `date_most_cases`
date_most_cases <- national %>% filter(cases == max(new_cases, na.rm = TRUE)) %>% pull(date)
# 2.n What was the date when the most new deaths in the U.S. occurred? Make sure to pull() this value `date_most_deaths`
date_most_deaths <- national %>% filter(deaths == max(new_deaths, na.rm = TRUE)) %>% pull(date)
date_most_deaths
# 2.o How many people died on the date when the most deaths occurred? Make sure to pull() this value `most_deaths`
most_deaths <- national %>% filter(deaths == max(new_deaths, na.rm = TRUE)) %>% pull(cases)
most_deaths
# You can plot this data with built-in plot functions
plot(national$new_cases)
plot(national$new_deaths)
highest_cases_in_each_state <- counties %>% group_by(cases, location) %>% filter(cases == max(cases))
highest_cases_in_each_state
highest_cases_in_each_state <- counties %>% group_by(state, county) %>% filter(cases == max(cases))
highest_cases_in_each_state
highest_cases_in_each_state <- counties %>% group_by(location) %>% filter(cases == max(cases))
highest_cases_in_each_state
highest_cases_in_each_state <- counties %>% group_by(state, county) %>% filter(cases == max(cases, na.rm = TRUE))
highest_cases_in_each_state
highest_cases_in_each_state <- counties %>% group_by(state, county) %>% filter(cases = max(cases, na.rm = TRUE))
highest_cases_in_each_state <- counties %>% group_by(state, county) %>% filter(cases == max(cases, na.rm = TRUE))
highest_cases_in_each_state
View(counties)
library(ggplot2)
df <- data.frame(
label = c("A", "B", "C", "D"),
value = 1:4,
stringsAsFactors = F
)
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
# Load libraries
library("dplyr")
library("stringr")
library("ggplot2")
# Exercise 1: Load the data
# Download and unzip one or more of the SPL datasets and load here from a file path
spl_df <- read.csv("~/Desktop/info-201/2022-2023-All-Checkouts-SPL-Data.csv", stringsAsFactors = FALSE)
View(spl_df)
# Exercise 2: We want to create a new date column ("date") with the month AND year and a default first day of the month
# Make a new column with checkout month, checkout year, and a default day value ("01") *pasted* together like so: 2020-10-01
# Then convert that column to a date value
spl_df <- spl_df %>% mutate(date = paste0(CheckoutYear, "-", CheckoutMonth, "-01"))
spl_df$date <- as.Date(spl_df$date, format = "%Y-%m-%d")
author_df <- spl_df %>% filter(str_detect(Creator, "(?!)Colleen Hoover"))
View(author_df)
author_df <- spl_df %>% filter(str_detect(Creator, "Colleen Hoover"))
author_df <- spl_df %>% filter(str_detect(Creator, "Rachel Renée Russell"))
checkouts_per_month <- spl_df %>% sum(group_by(date))
checkouts_per_month <- spl_df %>% group_by(date)
View(checkouts_per_month)
checkouts_per_month <- spl_df %>% group_by(CheckoutMonth)
author_df <- spl_df %>% filter(str_detect(Creator, "Rachel Renée Russell"))
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% summarize()
checkouts_per_month <- author_df %>% group_by(CheckoutMonth)
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% summarize(author_df == sum(Checkouts))
checkouts_per_month
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% summarize(author_df == length(sum(Checkouts)))
checkouts_per_month
source("~/Desktop/info-201/Getting-Started-with-A3-SPL-Data.R", echo=TRUE)
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% summarize(author_df == length(sum(Checkouts)))
checkouts_per_month
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) sum(checkouts_per_month)
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% sum(checkouts_per_month)
sum(checkouts_per_month)
checkouts_per_month <- author_df %>% group_by(CheckoutMonth)
sum(checkouts_per_month)
sum(checkouts_per_month)
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% filter(Checkouts == sum(Checkouts))
checkouts_per_month
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% filter(Checkouts == sum(Checkouts, na.rm = T))
checkouts_per_month
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% summarize(total_checkouts = sum(Checkouts, na.rm = TRUE))
checkouts_per_month
ggplot(data = checkouts_per_month) +
geom_point(mapping = aes(x = CheckoutMonth, y = total_checkouts, color = CheckoutMonth))
geom_line(mapping = aes(x = CheckoutMonth, y = total_checkouts, color = CheckoutMonth)
ggplot(data = checkouts_per_month) +
ggplot(data = checkouts_per_month) +
geom_point(mapping = aes(x = CheckoutMonth, y = total_checkouts, color = CheckoutMonth)) +
geom_line(mapping = aes(x = CheckoutMonth, y = total_checkouts, color = CheckoutMonth))
ggplot(data = checkouts_per_month) +
geom_point(mapping = aes(x = Year, y = total_checkouts, color = CheckoutMonth)) +
geom_line(mapping = aes(x = Year, y = total_checkouts, color = CheckoutMonth))
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = checkouts_per_month, color = CheckoutMonth))
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth))
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth)) +
scale_y_continous(labels = label_number_si())
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth)) +
scale_y_continous(labels = label_number_si())
library("scale")
library("scales")
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth)) +
scale_y_continous(labels = label_number_si())
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth)) +
scale_color_brewer(palette = "Accent") +
labs(title = "X")
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth)) +
scale_color_brewer(palette = "Accent") +
labs(title = "X")
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts, color = CheckoutMonth)) +
scale_color_brewer(palette = "Accent") +
labs(title = "X")
geom_line(mapping = aes(x = date, y = Checkouts) +
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "X")
ggplot(data = author_df) +
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = author_df) +
geom_smooth(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
author_df <- spl_df %>% filter(str_detect(Creator, "Colleen Hoover"))
author_df
checkouts_per_month <- author_df %>% group_by(CheckoutMonth) %>% summarize(total_checkouts = sum(Checkouts, na.rm = TRUE))
checkouts_per_month
ggplot(data = author_df) +
geom_(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = author_df) +
geom_(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = Checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = author_df) +
geom_line(mapping = aes(x = date, y = checkouts_per_month)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
checkouts_per_month <- author_df %>% group_by(CheckoutMonth, date) %>% summarize(total_checkouts = sum(Checkouts, na.rm = TRUE))
ggplot(data = checkouts_per_month) +
geom_line(mapping = aes(x = date, y = checkouts_per_month)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = checkouts_per_month) +
geom_line(mapping = aes(x = date, y = total_checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "xxx")
ggplot(data = checkouts_per_month) +
geom_line(mapping = aes(x = date, y = total_checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "Colleen Hoover Checkouts on the Rise")
ggplot(data = checkouts_per_month) +
geom_line(mapping = aes(x = date, y = total_checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "Colleen Hoover Checkouts on the Rise", x = "Date", y = "Total Checkouts")
ggplot(data = checkouts_per_month) +
geom_line(mapping = aes(x = date, y = total_checkouts)) +
scale_color_brewer(palette = "Accent") +
labs(title = "Colleen Hoover Checkouts on the Rise", x = "Month", y = "Total Checkouts")
ggplot(data = data) +
geom_line(aes(x = FOCV, y = GAD_G))
library(ggplot2)
library(dplyr)
library(stringr)
library(scales)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv(~/Desktop/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv(~/Desktop/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv(~Desktop/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv(~/Desktop/info-201/exploratory-analysis-Kdial7/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv(/info-201/exploratory-analysis-Kdial7/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
library(ggplot2)
library(dplyr)
library(stringr)
library(scales)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
data <- read.csv(Mental-Health-With-College-Students.csv, stringsAsFactors = FALSE)
data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
mental_health_data <- read.csv("Mental-Health-With-College-Students.csv")
library(ggplot2)
library(dplyr)
library(scales)
mh_data <- read.csv("Mental-Health-With-College-Students.csv")
mh_data <- read.csv(~/Desktop/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv")
mh_data <- read.csv(~/Desktop/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", StringsAsfactors = FALSE)
mh_data <- read.csv(/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", StringsAsfactors = FALSE)
mh_data <- read.csv(/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", StringsAsfactors = FALSE)
mh_data <- read.csv(/"Mental-Health-With-College-Students.csv", StringsAsfactors = FALSE)
mh_data <- read.csv("Mental-Health-With-College-Students.csv", StringsAsfactors = FALSE)
mh_data <- read.csv("Mental-Health-With-College-Students.csv")
mh_data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
mh_data <- read.csv(/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
mh_data <- read.csv(~/Users/khadija/Desktop/info-201/exploratory-analysis-Kdial17/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
mh_data <- read.csv(~/"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
mh_data <- read.csv(~"Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
mh_data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
setwd("/Users/khadija/Desktop/info-201/exploratory-analysis-Kdial17")
mh_data <- read.csv("Mental-Health-With-College-Students.csv", stringsAsFactors = FALSE)
ggplot(data = mh_data) +
geom_line(aes(x=FOCV, y =GAD_G))
ggplot(data = mh_data) +
geom_point(aes(x=FOCV, y =GAD_G))
ggplot(data = mh_data) +
geom_point(aes(x= FOCV, y =GAD_G))
ggplot(data = mh_data) +
geom_col(aes(x= FOCV, y =GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x= FOCV, y =GAD_G))
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G))
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
geom_line((aes(x= FOCV, y =GAD_G)))
ggplot(data = mh_data) +
geom_smooth(aes( x= FOCV, y = GAD_G)) +
geom_histogram((aes(x = FOCV, y = GAD_G)))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
geom_histogram((aes(x = FOCV, y = GAD_G)))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
geom_col((aes(x = FOCV, y = GAD_G)))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = FOCV, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = Vacinnation, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_smooth(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G))
ggplot(data = mh_data) +
geom_LINE(aes(x = FOCV, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = FOCV, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = FOCV, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_col(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_smooth(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_point(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_col(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(mh_data)
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(GAD_G)
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap()
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(test)
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(GAD_G)
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(FOCV)
ggplot(data = mh_data) +
geom_line(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(~FOCV)
ggplot(data = mh_data) +
geom_point(aes(x = Vaccination, y = GAD_G)) +
facet_wrap(~FOCV)
ggplot(data = mh_data) +
geom_point(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_col(aes(x = Vaccination, y = GAD_G))
ggplot(data = mh_data) +
geom_col(aes(x = Vaccination, y = GAD_G)) +
scale_x_continuous(breaks =seq(0, 1, 1))
ggplot(data = mh_data) +
geom_histogram(aes(x = Vaccination, y = GAD_G)) +
scale_x_continuous(breaks =seq(0, 1, 1))
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G))
View(mh_data)
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid (FOCV Testing)",
y = "Anxiety Severity (GAD_7 Testing)")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid (FOCV Testing)",
y = "Anxiety Severity (GAD_7 Score)")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)")
title: "Anxiety Rates Increasing As The Fear Covid Increases)
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)",
title: "Anxiety Rates Increasing As The Fear Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)",
title:"Anxiety Rates Increasing as the Fear Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)", title: "Anxiety Rates Increasing as the Fear Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_color_brewer(palette = "Accent")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_color_brewer(palette = "Set1")
ggplot(data = mh_data) +
geom_smooth(aes(x= FOCV, y =GAD_G)) +
labs(x = "Fear of Covid",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases")
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, Y = PHQ_G))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
geom_point(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
geom_col(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
GeomCol(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
geom_histogram(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
geom_smooth(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 8))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 10))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 8))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 3))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 35, 5))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 35, 5)) +
scale_x_continuous(breaks = seq(0, 35, 5))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 27, 3)) +
scale_x_continuous(breaks = seq(0, 35, 5))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 21, 3))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 21, 3)) +
scale_x_continuous(breaks = seq(0, 35, 5))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, , 3))
ggplot(data = mh_data) +
geom_line(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 3))
ggplot(data = mh_data) +
geom_smooth(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 3))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 21, 3)) +
scale_x_continuous(breaks = seq(0, 35, 5)) +
color = FOCV
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 21, 3)) +
scale_x_continuous(breaks = seq(0, 35, 5)) +
color = "FOCV"
ggplot(data = mh_data) +
geom_smooth(aes(x = Exposure_G, y = PHQ_G)) +
scale_y_continuous(breaks = seq(0, 27, 3))
ggplot(data = mh_data) +
geom_smooth(aes(x = Exposure_G, y = PHQ_G)) +
labs(x = "Exposure to Covid",
y = "Depression Severity (PHQ_Q Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x = Exposure_G, y = PHQ_G)) +
labs(x = "Exposure to Covid",
y = "Depression Severity (PHQ_Q Score)",
title = "Severity of Depression Increasing as the Exposure to Covid Increases")
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear Covid Increases") +
scale_y_continuous(breaks = seq(0, 21, 3)) +
scale_x_continuous(breaks = seq(0, 35, 5))
ggplot(data = mh_data) +
geom_smooth(aes(x = FOCV, y = GAD_G)) +
labs(x = "Fear of Covid (FoCV-19S Score)",
y = "Anxiety Severity (GAD_7 Score)",
title = "Anxiety Rates Increasing as the Fear of Covid Increases") +
scale_y_continuous(breaks = seq(0, 21, 3)) +
scale_x_continuous(breaks = seq(0, 35, 5))
